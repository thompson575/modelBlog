<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mlr3 on Modelling with R</title>
    <link>https://modelling-with-r.netlify.app/tags/mlr3/</link>
    <description>Recent content in mlr3 on Modelling with R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Fri, 12 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://modelling-with-r.netlify.app/tags/mlr3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sliced Episode 11: Austin House Prices</title>
      <link>https://modelling-with-r.netlify.app/zillow/</link>
      <pubDate>Fri, 12 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/zillow/</guid>
      <description>Summary:Background: In episode 11 of the 2021 series of Sliced, the competitors were given two hours in which to analyse a set of data on properties in the Austin area that were advertised on Zillow. The aim was to predict the house price, lumped into 5 categories.
My approach: I decided to use these data to illustrate the use of pipelines in mlr3. I identify commonly used words from the estate agents description of the property and use a pipeline to filter them and combine the selected keywords with the numerical descriptors of the property.</description>
    </item>
    
    <item>
      <title>Methods: PipeOps in mlr3</title>
      <link>https://modelling-with-r.netlify.app/mlr3_preprocessing/</link>
      <pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/mlr3_preprocessing/</guid>
      <description>IntroductionI’ll use the Boardgame Rating data from episode 1 of Sliced to illustrate the use of mlr3 for pre-processing. The challenge for that episode is to predict the scores given to boardgames by the boardgamegeek website (https://boardgamegeek.com/) using predictors that describe the game.
This post is a continuation of Methods: Introduction to mlr3. If you are new to mlr3 you ought to start with that earlier post.</description>
    </item>
    
    <item>
      <title>Sliced Episode 10: Animal adoption</title>
      <link>https://modelling-with-r.netlify.app/animal_adoption/</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/animal_adoption/</guid>
      <description>IntroductionThe data for episode 10 of Sliced, the second round of the play-offs, relates to the adoption of abandoned or unwanted pets. Given information about the animal, such as its breed and age, the competitors had to predict a three class outcome, either, adoption, transfer or what is euphemistically called ‘no outcome’, which in reality means that the animal was put down (another euphemism).
The data can be downloaded from https://www.</description>
    </item>
    
    <item>
      <title>Methods: Introduction to mlr3</title>
      <link>https://modelling-with-r.netlify.app/mlr3/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/mlr3/</guid>
      <description>IntroductionThis post introduces the ecosystem of packages known as mlr3. It is an alternative to tidymodels and one of my reasons for trying mlr3 was to compare the two.
mlr3 is built on R6. a package that enables Object Oriented Programming (OOP) in R. To understand the way that mlr3 works, it is helpful to know a little about OOP and R6, so that is where I will start.</description>
    </item>
    
  </channel>
</rss>
