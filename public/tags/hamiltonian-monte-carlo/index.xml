<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hamiltonian Monte Carlo on Modelling with R</title>
    <link>https://modelling-with-r.netlify.app/tags/hamiltonian-monte-carlo/</link>
    <description>Recent content in Hamiltonian Monte Carlo on Modelling with R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Mon, 07 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://modelling-with-r.netlify.app/tags/hamiltonian-monte-carlo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Methods: MCMC Algorithms</title>
      <link>https://modelling-with-r.netlify.app/methods_mcmc/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/methods_mcmc/</guid>
      <description>IntroductionMarkov Chain Monte Carlo (MCMC) Samplers are ways of drawing representative values from a target distribution. In this post I will develop MCMC sampling from scratch and illustrate some of the most popular algorithms with simple R code. The key to understanding the approach lies in the name; Monte Carlo says that the values will be drawn by a random process and Markov Chain says that each sampled value will be dependent on the previous value.</description>
    </item>
    
  </channel>
</rss>
