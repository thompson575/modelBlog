<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sliced on Modelling with R</title>
    <link>https://modelling-with-r.netlify.app/tags/sliced/</link>
    <description>Recent content in Sliced on Modelling with R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Mon, 20 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://modelling-with-r.netlify.app/tags/sliced/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Airbnb Price Prediction</title>
      <link>https://modelling-with-r.netlify.app/airbnb_prices/</link>
      <pubDate>Mon, 20 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/airbnb_prices/</guid>
      <description>Summary:Background: In episode 5 of the 2021 series of Sliced, the competitors were given two hours in which to analyse a set of data on Airbnb properties in New York City. The aim was to predict the price per night.
My approach: I work on a log(price + 1) scale as suggested by the evaluation metric. I spend quite a lot of time on feature extraction. I extract keywords from the description of the property and I merge geographically close neighbourhoods with few properties.</description>
    </item>
    
    <item>
      <title>Sliced Episode 4: Rain Tomorrow</title>
      <link>https://modelling-with-r.netlify.app/rain_tomorrow/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/rain_tomorrow/</guid>
      <description>Summary:Background: In episode 4 of the 2021 series of Sliced, the competitors were given two hours in which to analyse a set of data on daily weather patterns in different parts of Australia. The aim was to predict whether or not it will rain the next day.
My approach: I started with the idea that location would be key to a good model and I tried two approaches, one based on average rainfall patterns for the time of year and the other based on a day’s weather predicting the weather on the following day.</description>
    </item>
    
    <item>
      <title>Sliced Episode 3: Superstore profits</title>
      <link>https://modelling-with-r.netlify.app/superstore_profits/</link>
      <pubDate>Tue, 14 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/superstore_profits/</guid>
      <description>Summary:Background: In episode 3 of the 2021 series of Sliced, the competitors were given two hours in which to analyse a set of data on superstore sales. The aim was to predict the profit on a sale.
My approach: This is a good example of a problem for which we have knowledge about the structure of the data. In particular, we know the relation between sales, cost, discount and profit.</description>
    </item>
    
    <item>
      <title>Sliced Episode 2: Wildlife Strikes</title>
      <link>https://modelling-with-r.netlify.app/wildlife_strikes/</link>
      <pubDate>Sun, 12 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/wildlife_strikes/</guid>
      <description>Summary:Background: In episode 2 of the 2021 series of Sliced, the competitors were given two hours in which to analyse a set of data on wildlife strikes with aircraft. The aim was to predict whether or not the aircraft was damaged in the collision.
My approach: The original database was created by the FAA from reports filed by pilots and reporting is clearly incomplete. I spent the vast majority of my time cleaning the data and afterwards used a logistic regression model.</description>
    </item>
    
    <item>
      <title>Sliced Episode 1: Boardgame Ratings</title>
      <link>https://modelling-with-r.netlify.app/boardgames/</link>
      <pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/boardgames/</guid>
      <description>SummaryBackground: In episode 1 of the 2021 series of Sliced, the competitors were given two hours to analyse a set of data on boardgames. The aim was to predict the games’ ratings.
My approach: In the data exploration I transform the ratings and plot them against the potential predictors. I note inconsistencies in the data. The mechanics of the game and the type of game are described as text, so I create indicator variables for the words most closely associated with the games’ ratings.</description>
    </item>
    
    <item>
      <title>Sliced Methods Overview</title>
      <link>https://modelling-with-r.netlify.app/methods_overview/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/methods_overview/</guid>
      <description>IntroductionWhen analysing the Sliced datasets I have tried to use a consistent approach in order that my code is easier to follow. In this post I will give an overview of my approach.
Naming of partsThe first thing that you will notice about my code is that all tibbles and data frames are given names that end in DF. Sorry if you don’t like it, but I find it helpful to distinguish the data frame names for the names of variables that sit within the data frame.</description>
    </item>
    
    <item>
      <title>Sliced 2021 Overview</title>
      <link>https://modelling-with-r.netlify.app/sliced-2021-overview/</link>
      <pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/sliced-2021-overview/</guid>
      <description>IntroductionSliced is a data science competition hosted by Nick Wan and Meg Risdal on twitch ( https://www.twitch.tv/nickwan_datasci ). In each episode, 4 data scientists with very different backgrounds are given the same dataset and in 2 hours they must explore the data and build a predictive model. As well as the training data, they are given a test set that lacks the variable to be predicted. The model that best predicts in the test data according to a specified metric, wins the prediction element of the competition, but other points are available for data visualization, golden features and popularity as voted for by chat.</description>
    </item>
    
  </channel>
</rss>
