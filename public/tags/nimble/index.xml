<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nimble on Modelling with R</title>
    <link>https://modelling-with-r.netlify.app/tags/nimble/</link>
    <description>Recent content in nimble on Modelling with R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Tue, 27 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://modelling-with-r.netlify.app/tags/nimble/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Methods: Nimble HMC (Second thoughts)</title>
      <link>https://modelling-with-r.netlify.app/methods_nimble_hmc2/</link>
      <pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/methods_nimble_hmc2/</guid>
      <description>IntroductionIt is only yesterday that I wrote a post on nimbleHMC and already I have had second thoughts, some positive and some not so positive. In yesterday’s post, I hit a problem with dynamic indexing and I needed a work around based on dummy variables. Shortly, after posting I realised that there was a much simpler solution, which I’ll explain below. However, when I tested my new code, I realised that there were other issues that I had missed.</description>
    </item>
    
    <item>
      <title>Methods: Nimble HMC</title>
      <link>https://modelling-with-r.netlify.app/methods_nimble_hmc/</link>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/methods_nimble_hmc/</guid>
      <description>IntroductionIn my methods post entitled “R Software for Bayesian Analysis”, I discussed the problem of fitting Bayesian models using various R packages including, R2OpenBUGS, nimble, rstan and greta. nimble is particularly interesting because it is specifically written for use in R. It is very fast, but its default algorithm is based on Gibbs sampling with a series random walk Metropolis-Hastings samplers and this algorithm can mix poorly, leading to very long run times.</description>
    </item>
    
    <item>
      <title>Bayesian Sliced 2: Wildlife Strikes</title>
      <link>https://modelling-with-r.netlify.app/bayes_wildlife_strikes/</link>
      <pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/bayes_wildlife_strikes/</guid>
      <description>Summary:Background: In episode 2 of the 2021 series of Sliced, the competitors were given two hours in which to analyse a set of data on wildlife strikes with aircraft. The aim was to predict whether or not the aircraft was damaged in the collision.
My approach: The database was created by the FAA from reports filed by pilots that are clearly incomplete. For my previous post, I spent the vast majority of the time cleaning the data and afterwards used a logistic regression model.</description>
    </item>
    
    <item>
      <title>Methods: R Software for Bayesian Analysis</title>
      <link>https://modelling-with-r.netlify.app/methods_software/</link>
      <pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://modelling-with-r.netlify.app/methods_software/</guid>
      <description>IntroductionProbabilistic Programming Languages (PPLs) provide a way of specifying a Bayesian model and a choice of samplers that can be used to simulate parameter values from the model’s joint posterior. The Wikipedia page on Probabilitic Programming (https://en.wikipedia.org/wiki/Probabilistic_programming) lists about 40 such languages, of which a handful can be run in, or via, R.
As the name suggests, BUGS (Bayesian Inference using Gibbs Sampling) is a PPL that uses Gibbs sampling.</description>
    </item>
    
  </channel>
</rss>
